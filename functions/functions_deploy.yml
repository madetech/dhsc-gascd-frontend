trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- group: arm_service_connection
- group: subscription_id

parameters:
- name: environments
  type: object
  default:
  - name: dev
    arm_connection: '$(dev_arm_service_connections)'
    subscription_id: '$(dev_subscription_id)'
  - name: prod
    arm_connection: '$(prod_arm_service_connections)'
    subscription_id: '$(prod_subscription_id)'


stages:
  - stage: Build
    jobs:
    - job: Build
      steps:
      - checkout: self
      - task: UsePythonVersion@0
        displayName: "Set Python version to 3.9"
        inputs:
          versionSpec: '3.11'
          architecture: 'x64'
      - bash: |
          cd functions
          if [ -f extensions.csproj ]
          then
              dotnet build extensions.csproj --output ./bin
          fi
          pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
      - task: ArchiveFiles@2
        displayName: "Archive files"
        inputs:
          rootFolderOrFile: "$(System.DefaultWorkingDirectory)/functions"
          includeRootFolder: false
          archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
          artifact: 'FunctionsBuild'
          publishLocation: 'pipeline'
  - ${{ each environment in parameters.environments}}:
    - stage: FunctionDeploy${{environment.name}}
      jobs:
      - deployment: DeployFunction
        environment: ${{environment.name}}
      - job: Deploy
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'FunctionsBuild'
              targetPath: '$(Pipeline.Workspace)'
          - task: AzureFunctionApp@2
            inputs:
              connectedServiceNameARM: '${{environment.arm_connection}}'
              appType: 'functionAppLinux'
              appName: 'dapalpha-func-app-${{environment.name}}'
              package: '$(Pipeline.Workspace)/build$(Build.BuildId).zip'
              runtimeStack: 'PYTHON|3.11'
              deploymentMethod: 'auto'